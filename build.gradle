plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'signing'
    id 'idea'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

group = "org.litesolutions"
version = "3.3"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains:annotations:24.0.1"

    implementation("org.ow2.asm:asm:9.5")
    implementation("org.ow2.asm:asm-util:9.5")
    implementation("org.ow2.asm:asm-commons:9.5")
    implementation("org.ow2.asm:asm-tree:9.5")

    implementation "com.google.guava:guava:32.1.2-jre"
    // JiteScript depends on asm-all, but ASM 9+ does not provide asm-all
    implementation("me.qmx.jitescript:jitescript:0.4.1") {
        exclude group: "org.ow2.asm", module: "asm-all" // Exclude old ASM
        exclude group: "org.ow2.asm", module: "asm"      // Exclude any older version
    }
    testImplementation("org.testng:testng:7.9.0") {
        exclude group: "org.apache.ant", module: "ant"
        exclude group: "com.google.inject", module: "guice"
        exclude group: "junit", module: "junit"
        exclude group: "org.beanshell", module: "bsh"
        exclude group: "org.yaml", module: "snakeyaml"
    }

    testImplementation "org.mockito:mockito-core:5.7.0"

    testImplementation "org.assertj:assertj-core:3.24.2"

    implementation("org.slf4j:slf4j-api:2.0.9")
    implementation("ch.qos.logback:logback-classic:1.4.11") // Replaces slf4j-simple
}

test {
    useTestNG() {
        suiteXmlFiles = [] // Ensure TestNG XML files are correctly configured
        useDefaultListeners = true
    }
    jvmArgs([
        "--add-opens=java.base/java.lang=ALL-UNNAMED",
        "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
        "--add-opens=java.base/java.util=ALL-UNNAMED",
        "--add-opens=java.base/java.io=ALL-UNNAMED",
    ])
}

tasks.withType(Test).configureEach {
    useTestNG()
    jvmArgs([
        "--add-opens=java.base/java.lang=ALL-UNNAMED",
        "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED"
    ])
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes["Implementation-Title"] = project.name
        attributes["Implementation-Version"] = project.version
    }
}

application {
    mainClass = 'com.github.fge.Main'
}

shadowJar {
    relocate("com.google.common", "relocated.com.google.common")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        /*maven {
            name = "sonatype"
            url = version.endsWith("SNAPSHOT") ?
                "https://oss.sonatype.org/content/repositories/snapshots/" :
                "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("sonatypeUsername") ?: ""
                password = project.findProperty("sonatypePassword") ?: ""
            }
        }*/
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/litesolutions/grappa"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == "org.ow2.asm") {
            details.useVersion "9.5"
        }
    }
}
